diff --git a/node_modules/@openzeppelin/truffle-upgrades/dist/upgrade-proxy.js b/node_modules/@openzeppelin/truffle-upgrades/dist/upgrade-proxy.js
index d814417..8bb8a42 100644
--- a/node_modules/@openzeppelin/truffle-upgrades/dist/upgrade-proxy.js
+++ b/node_modules/@openzeppelin/truffle-upgrades/dist/upgrade-proxy.js
@@ -16,7 +16,12 @@ async function upgradeProxy(proxy, Contract, opts = {}) {
 }
 exports.upgradeProxy = upgradeProxy;
 async function getUpgrader(provider, contractTemplate, proxyAddress) {
-    const adminAddress = await (0, upgrades_core_1.getAdminAddress)(provider, proxyAddress);
+    const conflux = require('js-conflux-sdk');
+    const networkId = (await provider.send('cfx_getStatus')).networkId;
+
+    let adminAddress = await (0, upgrades_core_1.getAdminAddress)(provider, proxyAddress);
+    adminAddress = conflux.format.address(adminAddress, conflux.format.uInt(networkId), true);
+
     const adminBytecode = await (0, upgrades_core_1.getCode)(provider, adminAddress);
     if (adminBytecode === '0x') {
         // No admin contract: use TransparentUpgradeableProxyFactory to get proxiable interface
diff --git a/node_modules/@openzeppelin/truffle-upgrades/dist/utils/deploy-impl.js b/node_modules/@openzeppelin/truffle-upgrades/dist/utils/deploy-impl.js
index 27cd55c..23427fd 100644
--- a/node_modules/@openzeppelin/truffle-upgrades/dist/utils/deploy-impl.js
+++ b/node_modules/@openzeppelin/truffle-upgrades/dist/utils/deploy-impl.js
@@ -50,6 +50,10 @@ async function deployImpl(deployData, Contract, opts, currentImplAddress) {
     (0, upgrades_core_1.assertUpgradeSafe)([deployData.validations], deployData.version, deployData.fullOpts);
     const layout = deployData.layout;
     if (currentImplAddress !== undefined) {
+        const conflux = require('js-conflux-sdk');
+        const networkId = (await deployData.provider.send('cfx_getStatus')).networkId;
+        currentImplAddress = conflux.format.address(currentImplAddress, conflux.format.uInt(networkId), true);
+
         const manifest = await upgrades_core_1.Manifest.forNetwork(deployData.provider);
         const currentLayout = await (0, upgrades_core_1.getStorageLayoutForAddress)(manifest, deployData.validations, currentImplAddress);
         if (opts.unsafeSkipStorageCheck !== true) {
